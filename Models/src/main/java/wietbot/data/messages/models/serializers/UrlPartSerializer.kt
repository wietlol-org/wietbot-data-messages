// hash: #585c4a5a
// @formatter:off

package wietbot.data.messages.models.serializers

import bitblock.api.serialization.DeserializationContext
import bitblock.api.serialization.ModelSerializer
import bitblock.api.serialization.Schema
import bitblock.api.serialization.SerializationContext
import bitblock.api.serialization.deserialize
import java.io.InputStream
import java.io.OutputStream
import java.util.UUID
import utils.common.streams.readUnsignedVarInt
import utils.common.streams.writeUnsignedVarInt
import wietbot.data.messages.models.builders.UrlPartBuilder
import wietbot.data.messages.models.models.*
import wietbot.data.messages.models.models.UrlPart

// Generated by BitBlock version 1.0.0

// @formatter:on
// @tomplot:customCode:start:70v0f9
// @tomplot:customCode:end
// @formatter:off

object UrlPartSerializer : ModelSerializer<UrlPart, UrlPart>
{
	private val endOfObject: Int = 0
	
	private val hrefIndex: Int = 1
	
	private val textIndex: Int = 2
	
	private val titleIndex: Int = 3
	
	override val modelId: UUID
		get() = UrlPart.serializationKey
	
	override val dataClass: Class<UrlPart>
		get() = UrlPart::class.java
	
	override fun serialize(serializationContext: SerializationContext, stream: OutputStream, schema: Schema, entity: UrlPart)
	{
		stream.writeUnsignedVarInt(hrefIndex)
		schema.serialize(serializationContext, stream, entity.href)
		
		stream.writeUnsignedVarInt(textIndex)
		schema.serialize(serializationContext, stream, entity.text)
		
		entity.title?.also {
			stream.writeUnsignedVarInt(titleIndex)
			schema.serialize(serializationContext, stream, it)
		}
		
		stream.writeUnsignedVarInt(endOfObject)
	}
	
	override fun deserialize(deserializationContext: DeserializationContext, stream: InputStream, schema: Schema): UrlPart
	{
		var href: String? = null
		var text: ContentPart? = null
		var title: ContentPart? = null
		
		while (true)
		{
			when (stream.readUnsignedVarInt())
			{
				endOfObject -> return DefaultUrlPart(
					href!!,
					text!!,
					title,
				)
				hrefIndex -> href = schema.deserialize(deserializationContext, stream)
				textIndex -> text = schema.deserialize(deserializationContext, stream)
				titleIndex -> title = schema.deserialize(deserializationContext, stream)
				else -> schema.deserialize<Any>(deserializationContext, stream)
			}
		}
	}
	
	// @formatter:on
	// @tomplot:customCode:start:5CFs54
	// @tomplot:customCode:end
	// @formatter:off
}
// @formatter:on
